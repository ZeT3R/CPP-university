#include <iostream>
#include "Polinom.h"

using namespace std;

int main(){
	setlocale(LC_ALL, "Rus");
	
	float test1[]{1, 0, 1}; // x^2 + 0x + 1
	Polinom a(test1,3); // x^2 + 1, Длина 3
	Polinom c = a;		// Используется для сохранения а
	float test2[]{1, 0, -1}; // x^2 + 0x - 1
	Polinom b(test2,3); // x^2 - 1, Длина 3
	
	cout << "Полином а: "<< a << "\n\n";
	cout << "Полином b: " << b << "\n\n";
	cout << "a + b = " << a + b << "\n";
	cout << "a - b = " << a - b << "\n";
	cout << "a * b = " << a * b << "\n";
	cout << "a / b = " << a / b << "\n";
	cout << "a % b = " << a % b << "\n\n\n";
	cout << "-a = " << -a << "\n\n";

	cout << "Операции +=, -=, *=, /=, %=, =\n\n";
	a += b;
	cout << "a += b: " << a << "\n";
	a -= b;											// Делаю обратные операции, чтобы вернуть полиному a его первоначальный вид.
	
	a -= b;
	cout << "a -= b: " << a << "\n";
	a += b;
	
	a *= b;
	cout << "a *= b: " << a << "\n";
	a /= b;
	
	cout << "a /= b: " << a << "\n";
	a *= b;											// a равно 1 и при умножении на b получаем тот же полином, что и b.
	
	c %= b;											// Использую c, потому что а после всех преобразований имеет не начальный вид.
	cout << "a %= b: " << c << "\n";				// а равно x^2 - x - 1, b имеет идентичный вид, так что при операции % результат 0.
	c = b;											// a и так равно b, так что смысла бы не было. А так видно, что всё работает :)
	cout << "a = b: " << c << "\n\n";
	
	cout << a << " - Полином a\n\n";
	cout << b << " - Полином b\n\n";
	cout << c << " - Полином c\n\n";
	
	cout << "Метод at(1)\n" << a.at(1) << "\n\n";
	
	cout << "Расчёт для заданного полинома. Введите x: ";
	float x;
	cin >> x; 										// При вводе буквы, а не цифры, в функции вернётся 0, и программа завершит своё действие.
	
	cout << "При подстановке в полином а, наш ответ выглядит так: \n" << a << " -> x = " << x << ", Ответ: " << a.rasschet(x) << "\n\n";
	cout << "Введите свой полином следуя инструкции: \n" << "Введите 2 числа: длину полинома и коэффициент.\nПосле этого вводите коэффициенты при x в обратном порядке.\n";
	cin >> c;
	cout << c;
	
	return 0;
}
